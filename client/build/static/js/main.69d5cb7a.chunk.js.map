{"version":3,"sources":["components/MainPage.js","components/PlayerList.js","views/Main.js","components/AddPlayerPage.js","components/PlayerForm.js","views/AddPlayer.js","views/GameOne.js","views/GameTwo.js","views/GameThree.js","App.js","serviceWorker.js","index.js"],"names":["props","to","className","removeFromDom","player","map","idx","key","playerName","playerPosition","onClick","e","playerId","_id","axios","delete","then","res","useState","setPlayer","loaded","setLoaded","useEffect","get","data","MainPage","PlayerList","filter","setPlayerName","setPlayerPosition","gameOne","gameTwo","gameThree","errors","setErrors","message","id","onSubmit","preventDefault","post","navigate","catch","err","response","type","onChange","target","value","AddPlayerPage","PlayerForm","submit","setSubmit","playing","put","console","log","notPlaying","undecided","App","Main","path","AddPlayer","GameOne","GameTwo","GameThree","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.69d5cb7a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default (props) => {\n  return (\n    <div>\n      <p>\n        <Link to={\"/\"} className=\"btn btn-info col-4\">\n          Manage Players\n        </Link>{\" \"}\n        |{\" \"}\n        <Link to={\"/status/game/1\"} className=\"btn btn-info col-4\">\n          Manage Player Status\n        </Link>\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"@reach/router\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default (props) => {\n  const { removeFromDom } = props;\n  const deletePlayer = (playerId) => {\n    axios\n      .delete(\"http://localhost:8000/api/player/delete/\" + playerId)\n      .then((res) => {\n        removeFromDom(playerId);\n      });\n  };\n  return (\n    <div>\n      <p>\n        <Link to={`/`} className=\"btn btn-secondary col-2\">\n          List\n        </Link>{\" \"}\n        |{\" \"}\n        <Link to={`/player/add`} className=\"btn btn-secondary col-2\">\n          Add Player\n        </Link>\n      </p>\n      <table className=\"table table-bordered\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Team Name: </th>\n            <th>Preferd Position: </th>\n            <th>Actions: </th>\n          </tr>\n        </thead>\n        {props.player.map((player, idx) => {\n          return (\n            <tbody>\n              <tr key={idx}>\n                <td>{player.playerName}</td>\n                <td>{player.playerPosition}</td>\n                <td>\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={(e) => {\n                      deletePlayer(player._id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </table>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MainPage from \"../components/MainPage\";\nimport PlayerList from \"../components/PlayerList\";\n\nexport default () => {\n  const [player, setPlayer] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/player\").then((res) => {\n      setPlayer(res.data);\n      setLoaded(true);\n    });\n  }, []);\n\n  const removeFromDom = (playerId) => {\n    setPlayer(player.filter((player) => player._id !== playerId));\n  };\n  return (\n    <>\n      <MainPage />\n      {loaded && <PlayerList player={player} removeFromDom={removeFromDom} />}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nexport default (props) => {\n  return (\n    <div>\n      <p>\n        <Link to={`/`} className=\"btn btn-secondary col-2\">\n          List\n        </Link>{\" \"}\n        |{\" \"}\n        <Link to={`/player/add`} className=\"btn btn-secondary col-2\">\n          Add Player\n        </Link>\n      </p>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { navigate } from \"@reach/router\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default (props) => {\n  const [playerName, setPlayerName] = useState(\"\");\n  const [playerPosition, setPlayerPosition] = useState(\"\");\n  const [gameOne, setGameOne] = useState(\"undecided\");\n  const [gameTwo, setGameTwo] = useState(\"undecided\");\n  const [gameThree, setGameThree] = useState(\"undecided\");\n  const [errors, setErrors] = useState({\n    playerName: \"\",\n    playerPosition: \"\",\n  });\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    setErrors({\n      playerName: \"\",\n      playerPosition: \"\",\n    });\n    axios\n      .post(\"http://localhost:8000/api/player/add\", {\n        playerName,\n        playerPosition,\n        gameOne,\n        gameTwo,\n        gameThree,\n      })\n      .then((res) => navigate(\"/\"))\n      .catch((err) => {\n        setErrors(err.response.data.errors);\n      });\n  };\n  return (\n    <div>\n      <span>{errors.playerName != null ? errors.playerName.message : \"\"}</span>\n      <br />\n      <span>\n        {errors.playerPosition != null ? errors.playerPosition.message : \"\"}\n      </span>\n      <br />\n      <div id=\"form\">\n        <form onSubmit={onSubmitHandler}>\n          <p>\n            <label>Player Name: </label>\n            <br />\n            <input\n              type=\"text\"\n              className=\"col-3\"\n              onChange={(e) => setPlayerName(e.target.value)}\n            />\n          </p>\n          <p>\n            <label>Prefered Player Position: </label>\n            <br />\n            <input\n              type=\"text\"\n              className=\"col-3\"\n              onChange={(e) => setPlayerPosition(e.target.value)}\n            />\n          </p>\n          <input className=\"btn btn-success col-3\" type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport MainPage from \"../components/MainPage\";\nimport AddPlayerPage from \"../components/AddPlayerPage\";\nimport PlayerForm from \"../components/PlayerForm\";\n\nexport default () => {\n  return (\n    <>\n      <MainPage />\n      <AddPlayerPage />\n      <PlayerForm />\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MainPage from \"../components/MainPage\";\nimport { Link } from \"@reach/router\";\nimport { navigate } from \"@reach/router\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default () => {\n  const [player, setPlayer] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/player\").then((res) => {\n      setPlayer(res.data);\n      setLoaded(true);\n    });\n  }, [submit]);\n\n  const playing = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameOne: \"playing\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const notPlaying = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameOne: \"notPlaying\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const undecided = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameOne: \"undecided\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <MainPage />\n      <Link to={\"/status/game/1\"} className=\"btn btn-primary col-1\">\n        Game 1\n      </Link>{\" \"}\n      |{\" \"}\n      <Link to={\"/status/game/2\"} className=\"btn btn-primary col-1\">\n        Game 2\n      </Link>{\" \"}\n      |{\" \"}\n      <Link to={\"/status/game/3\"} className=\"btn btn-primary col-1\">\n        Game 3\n      </Link>\n      <table className=\"table table-bordered\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Team Name: </th>\n            <th>Action: </th>\n          </tr>\n        </thead>\n        {player.map((player, idx) => {\n          return (\n            <tr key={idx}>\n              <td>{player.playerName}</td>\n              <td>\n                {player.gameOne == \"playing\" ? (\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={(e) => {\n                      playing(player._id);\n                    }}\n                  >\n                    Playing\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      playing(player._id);\n                    }}\n                  >\n                    Playing\n                  </button>\n                )}\n                |\n                {player.gameOne == \"notPlaying\" ? (\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={(e) => {\n                      notPlaying(player._id);\n                    }}\n                  >\n                    Not Playing\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      notPlaying(player._id);\n                    }}\n                  >\n                    Not Playing\n                  </button>\n                )}\n                |\n                {player.gameOne == \"undecided\" ? (\n                  <button\n                    className=\"btn btn-warning\"\n                    onClick={(e) => {\n                      undecided(player._id);\n                    }}\n                  >\n                    Undecided\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      undecided(player._id);\n                    }}\n                  >\n                    Undecided\n                  </button>\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MainPage from \"../components/MainPage\";\nimport { Link } from \"@reach/router\";\n\nexport default () => {\n  const [player, setPlayer] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/player\").then((res) => {\n      setPlayer(res.data);\n      setLoaded(true);\n    });\n  }, [submit]);\n\n  const playing = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameTwo: \"playing\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const notPlaying = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameTwo: \"notPlaying\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const undecided = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameTwo: \"undecided\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n  return (\n    <div>\n      <MainPage />\n      <Link to={\"/status/game/1\"} className=\"btn btn-primary col-1\">\n        Game 1\n      </Link>{\" \"}\n      |{\" \"}\n      <Link to={\"/status/game/2\"} className=\"btn btn-primary col-1\">\n        Game 2\n      </Link>{\" \"}\n      |{\" \"}\n      <Link to={\"/status/game/3\"} className=\"btn btn-primary col-1\">\n        Game 3\n      </Link>\n      <table className=\"table table-bordered\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Team Name: </th>\n            <th>Action: </th>\n          </tr>\n        </thead>\n        {player.map((player, idx) => {\n          return (\n            <tr key={idx}>\n              <td>{player.playerName}</td>\n              <td>\n                {player.gameTwo == \"playing\" ? (\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={(e) => {\n                      playing(player._id);\n                    }}\n                  >\n                    Playing\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      playing(player._id);\n                    }}\n                  >\n                    Playing\n                  </button>\n                )}\n                |\n                {player.gameTwo == \"notPlaying\" ? (\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={(e) => {\n                      notPlaying(player._id);\n                    }}\n                  >\n                    Not Playing\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      notPlaying(player._id);\n                    }}\n                  >\n                    Not Playing\n                  </button>\n                )}\n                |\n                {player.gameTwo == \"undecided\" ? (\n                  <button\n                    className=\"btn btn-warning\"\n                    onClick={(e) => {\n                      undecided(player._id);\n                    }}\n                  >\n                    Undecided\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      undecided(player._id);\n                    }}\n                  >\n                    Undecided\n                  </button>\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MainPage from \"../components/MainPage\";\nimport { Link } from \"@reach/router\";\n\nexport default () => {\n  const [player, setPlayer] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/player\").then((res) => {\n      setPlayer(res.data);\n      setLoaded(true);\n    });\n  }, [submit]);\n\n  const playing = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameThree: \"playing\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const notPlaying = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameThree: \"notPlaying\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const undecided = (playerId) => {\n    axios\n      .put(\"http://localhost:8000/api/player/update/\" + playerId, {\n        gameThree: \"undecided\",\n      })\n      .then((res) => {\n        setSubmit(!submit);\n      })\n      .catch((err) => console.log(err));\n  };\n  return (\n    <div>\n      <MainPage />\n      <Link to={\"/status/game/1\"} className=\"btn btn-primary col-1\">\n        Game 1\n      </Link>{\" \"}\n      |{\" \"}\n      <Link to={\"/status/game/2\"} className=\"btn btn-primary col-1\">\n        Game 2\n      </Link>{\" \"}\n      |{\" \"}\n      <Link to={\"/status/game/3\"} className=\"btn btn-primary col-1\">\n        Game 3\n      </Link>\n      <table className=\"table table-bordered\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Team Name: </th>\n            <th>Action: </th>\n          </tr>\n        </thead>\n        {player.map((player, idx) => {\n          return (\n            <tr key={idx}>\n              <td>{player.playerName}</td>\n              <td>\n                {player.gameThree == \"playing\" ? (\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={(e) => {\n                      playing(player._id);\n                    }}\n                  >\n                    Playing\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      playing(player._id);\n                    }}\n                  >\n                    Playing\n                  </button>\n                )}\n                |\n                {player.gameThree == \"notPlaying\" ? (\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={(e) => {\n                      notPlaying(player._id);\n                    }}\n                  >\n                    Not Playing\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      notPlaying(player._id);\n                    }}\n                  >\n                    Not Playing\n                  </button>\n                )}\n                |\n                {player.gameThree == \"undecided\" ? (\n                  <button\n                    className=\"btn btn-warning\"\n                    onClick={(e) => {\n                      undecided(player._id);\n                    }}\n                  >\n                    Undecided\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => {\n                      undecided(player._id);\n                    }}\n                  >\n                    Undecided\n                  </button>\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Router } from \"@reach/router\";\nimport Main from \"./views/Main\";\nimport AddPlayer from \"./views/AddPlayer\";\nimport GameOne from \"./views/GameOne\";\nimport GameTwo from \"./views/GameTwo\";\nimport GameThree from \"./views/GameThree\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Main path=\"/\" />\n        <AddPlayer path=\"/player/add\" />\n        <GameOne path=\"/status/game/1\" />\n        <GameTwo path=\"/status/game/2\" />\n        <GameThree path=\"/status/game/3\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}